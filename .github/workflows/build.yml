name: Build
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # selecting a toolchain either by action or manual `rustup` calls should happen
      # before the cache plugin, as the cache uses the current rustc version as its cache key
      - name: Install Rust Toolchain
        run: |
          rustup toolchain install stable --profile minimal

      - name: Install cargo-hack
        # An arbitrary version SemVer constrained to prevent breaking CI as time
        # goes on. Feel free to bump.
        run: cargo install cargo-hack@^0.6.35

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            . -> target

      - name: Remove Cargo.lock
        # Because this is a library crate, it is best to not use a lockfile
        # so we are more quickly alerted to breaking changes if a dependency
        # violates semver.
        run: rm Cargo.lock

      # Fail fast
      - name: Check
        run: cargo hack check --feature-powerset --no-dev-deps

      # Catch link-time errors missed by check
      - name: Build
        run: cargo build --all-features

      # Proper exhaustive testing
      - name: Test
        # Test can't be run with --no-dev-deps
        run: cargo hack test --feature-powerset

      # Finally, lets not be sloppy
      - name: Clippy
        run: cargo hack clippy --feature-powerset --no-dev-deps
